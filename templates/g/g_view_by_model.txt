from django.http import Http404
from rest_framework import status
from rest_framework.views import APIView
from rest_framework.decorators import api_view
from rest_framework.response import Response 
from .models import {{model_name}}
from .serializers import {{model_name}}Serializer
 
 
class {{model_name}}List(APIView):
    """
    List all {{model_name}}s, or create a new {{model_name}}.
    """
    def get(self, request, format=None):
        {{model_name|lower}}s = {{model_name}}.objects.all()
        serializer = {{model_name}}Serializer({{model_name|lower}}s, many=True)
        return Response(serializer.data)

    def post(self, request, format=None):
        serializer = {{model_name}}Serializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
 
 

class {{model_name}}Detail(APIView):
    """
    Retrieve, update or delete a {{model_name}} instance.
    """
    def get_object(self, pk): 
        try: 
            return {{model_name}}.objects.get(pk=pk)
        except {{model_name}}.DoesNotExist:
            raise Http404 


    def get(self, request, pk, format=None):
        {{model_name|lower}} = self.get_object(pk)
        serializer = {{model_name}}Serializer({{model_name|lower}})
        return Response(serializer.data) 

    def put(self, request, pk, format=None):
        {{model_name|lower}} = self.get_object(pk)
        serializer = {{model_name}}Serializer({{model_name|lower}}, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def delete(self, request, pk, format=None):
        {{model_name|lower}} = self.get_object(pk)
        {{model_name|lower}}.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)